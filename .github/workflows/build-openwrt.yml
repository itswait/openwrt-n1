#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  workflow_dispatch:
  schedule:
   - cron: '0 20 */5 * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  MKNOP_URL: https://github.com/tuanqing/mknop
  MKNOP_DEVICE: phicomm-n1
  FEEDS_CONF: feeds.conf
  CONFIG_FILE: config.ini
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get -qq update
        sudo apt-get -qq install build-essential ccache ecj fastjar file g++ gawk \
            gettext git java-propose-classpath libelf-dev libncurses5-dev \
            libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
            python3-distutils python3-setuptools rsync subversion swig time \
            xsltproc zlib1g-dev
        sudo apt-get -qq autoremove --purge
        sudo apt-get -qq autoclean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone openwrt code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Clone mknop code
      working-directory: /workdir
      run: |
        git clone $MKNOP_URL mknop
        ln -sf /workdir/mknop $GITHUB_WORKSPACE/mknop

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Patch flippy kernel
      id: patch
      if: steps.compile.outputs.status == 'success'
      run: |
        cd mknop
        mv ../openwrt/bin/targets/*/*/*-rootfs.tar.gz openwrt
        sudo ./gen_openwrt -m $MKNOP_DEVICE -d
        echo "::set-output name=status::success"

    - name: Upload armvirt firmware to artifact
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt_armvirt-64_${{ env.FILE_DATE }}
        path: mknop/openwrt/*-rootfs.tar.gz

    - name: Upload patched firmware to artifact
      uses: actions/upload-artifact@main
      if: steps.patch.outputs.status == 'success'
      with:
        name: openwrt_${{ env.MKNOP_DEVICE }}_${{ env.FILE_DATE }}
        path: mknop/out/${{ env.MKNOP_DEVICE }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
